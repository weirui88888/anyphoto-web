name: Upload Web Static Files And Server Files

on:
  push:
    branches:
      - main-origin

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-web:
    name: deploy-web
    runs-on: ubuntu-latest
    outputs:
      WebPageUpdateTimeWithNumber: ${{ steps.observer.outputs.WebPageUpdateTimeWithNumber }}
    steps:
      - name: Fetch Resources
        uses: actions/checkout@v3

      - name: Get Latest Commit Message
        id: getLatestCommitMessage
        run: |
          echo "LatestCommitMessage=$(git log --format=%B -n 1 ${{ github.sha }})" >> $GITHUB_OUTPUT

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmmirror.com/
          cache: pnpm

      - name: Set Up Environment Variables
        run: |
          echo "REACT_APP_ALI_ACCESSKEYID=${{ secrets.REACT_APP_ALI_ACCESSKEYID }}" >> .env.production
          echo "REACT_APP_ALI_ACCESSKEYSECRET=${{ secrets.REACT_APP_ALI_ACCESSKEYSECRET }}" >> .env.production
          echo "REACT_APP_ALI_CAPTCHA_PREFIX=${{ secrets.REACT_APP_ALI_CAPTCHA_PREFIX }}" >> .env.production
          echo "REACT_APP_ALI_CAPTCHA_LOGININ_SCENE_ID=${{ secrets.REACT_APP_ALI_CAPTCHA_LOGININ_SCENE_ID }}" >> .env.production
          echo "REACT_APP_ALI_CAPTCHA_SIGNUP_SCENE_ID=${{ secrets.REACT_APP_ALI_CAPTCHA_SIGNUP_SCENE_ID }}" >> .env.production
          echo "REACT_APP_WEBSITE_LATEST_COMMIT_ID=$GITHUB_SHA" >> .env.production
          echo "REACT_APP_WEBSITE_LATEST_COMMIT_MESSAGE=${{ steps.getLatestCommitMessage.outputs.LatestCommitMessage }}" >> .env.production

      - name: Install Dependencies & Build
        run: |
          pnpm install
          pnpm run build

      - name: View Anyphoto Web Static Files
        run: ls build

      - name: Deploy Web Static Files To Centos
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ secrets.CENTOS_USER }}
          server: ${{ secrets.CENTOS_HOST }}
          password: ${{ secrets.CENTOS_PASSWORD }}
          local_path: './build/*'
          remote_path: '/home/www/anyphoto-web'
          delete_remote_files: true

      - name: Observer Web Page Update Time
        id: observer
        run: |
          echo "-------------------- Observer Web Page Update Time Log Start --------------------"
          echo "WebPageUpdateTimeWithNumber=$(date "+%y%m%d").$GITHUB_RUN_NUMBER"
          echo "-------------------- Observer Web Page Update Time Log end --------------------"
          echo "WebPageUpdateTimeWithNumber=$(date "+%y%m%d").$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

  deploy-server:
    name: deploy-server
    runs-on: ubuntu-latest
    needs: deploy-web
    steps:
      - name: Fetch Resources
        uses: actions/checkout@v3

      - name: Deploy to Server
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.CENTOS_HOST }}
          user: ${{ secrets.CENTOS_USER }}
          pass: ${{ secrets.CENTOS_PASSWORD }}
          connect_timeout: 60s
          first_ssh: |
            cd /home/www
            rm -rf anyphoto-server
            mkdir anyphoto-server
          scp: |-
            ./server/* => /home/www/anyphoto-server/
            ./server/.env.vault => /home/www/anyphoto-server/
          last_ssh: |
            source /etc/profile
            cd /home/www/anyphoto-server
            pnpm i
            pnpm run start:production

      - name: View Env Detail
        run: echo ${{needs.deploy-web.outputs.WebPageUpdateTimeWithNumber}}
