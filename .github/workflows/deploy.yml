name: Upload Web Static Files And Server Files

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-changed-files:
    runs-on: ubuntu-latest
    name: check-changed-files
    outputs:
      shouldDeployWeb: ${{steps.changed-files-yaml.outputs.web_any_changed}}
      shouldDeployServer: ${{steps.changed-files-yaml.outputs.server_any_changed}}
      shouldDeployAll: ${{steps.changed-files-yaml.outputs.action_any_changed}}
      webChangedFiles: ${{steps.changed-files-yaml.outputs.web_all_changed_and_modified_files}}
      serverChangedFiles: ${{steps.changed-files-yaml.outputs.server_all_changed_and_modified_files}}
      latestCommitMessage: ${{steps.get-latest-commit.outputs.latest_commit_message }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Commit Message
        id: get-latest-commit
        run: |
          echo "latest_commit_message=$(git log --format=%s -n 1 ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Get changed files
        id: changed-files-yaml
        uses: tj-actions/changed-files@v40
        with:
          files_yaml: |
            action:
              - '.github/workflows/**'
            server:
              - server/**
            web:
              - ./**
              - '!.github/**'
              - '!server/**'

  deploy-web:
    name: deploy-web
    runs-on: ubuntu-latest
    needs: check-changed-files
    if: ${{ (needs.check-changed-files.outputs.shouldDeployWeb == 'true') || (needs.check-changed-files.outputs.shouldDeployAll == 'true') }}
    steps:
      - name: Fetch Resources
        uses: actions/checkout@v3

      - name: View Changed Web Files Name
        if: ${{ needs.check-changed-files.outputs.shouldDeployWeb == 'true' }}
        run: |
          echo "List all the web files that have changed: ${{ needs.check-changed-files.outputs.webChangedFiles }}"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmmirror.com/
          cache: pnpm

      - name: Set Up Environment Variables
        run: |
          echo "REACT_APP_ALI_ACCESS_KEY_ID=${{ secrets.REACT_APP_ALI_ACCESSKEYID }}" >> .env.production
          echo "REACT_APP_ALI_ACCESS_KEY_SECRET=${{ secrets.REACT_APP_ALI_ACCESSKEYSECRET }}" >> .env.production
          echo "REACT_APP_WEBSITE_LATEST_COMMIT_ID=$GITHUB_SHA" >> .env.production
          echo "REACT_APP_WEBSITE_LATEST_COMMIT_MESSAGE=${{ needs.check-changed-files.outputs.latestCommitMessage }}" >> .env.production

      - name: Install Dependencies & Build
        run: |
          pnpm install
          pnpm run build

      - name: View Anyphoto Web Static Files
        run: ls build

      - name: Deploy Web Static Files To Ubuntu
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ secrets.UBUNTU_USER }}
          server: ${{ secrets.UBUNTU_HOST }}
          password: ${{ secrets.UBUNTU_PASSWORD }}
          local_path: './build/*'
          remote_path: '/home/www/anyphoto-web'
          delete_remote_files: true

  deploy-server:
    name: deploy-server
    runs-on: ubuntu-latest
    needs: check-changed-files
    if: ${{ (needs.check-changed-files.outputs.shouldDeployServer == 'true') || (needs.check-changed-files.outputs.shouldDeployAll == 'true') }}
    steps:
      - name: Fetch Resources
        uses: actions/checkout@v3

      - name: View Changed Server Files Name
        if: ${{ needs.check-changed-files.outputs.shouldDeployServer == 'true' }}
        run: |
          echo "List all the server files that have changed: ${{ needs.check-changed-files.outputs.serverChangedFiles }}"

      - name: Deploy Express Server Files To Ubuntu
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.UBUNTU_HOST }}
          user: ${{ secrets.UBUNTU_USER }}
          pass: ${{ secrets.UBUNTU_PASSWORD }}
          connect_timeout: 60s
          first_ssh: |
            cd /home/www
            rm -rf anyphoto-server
            mkdir anyphoto-server
          scp: |-
            ./server/* => /home/www/anyphoto-server/
            ./server/.env.vault => /home/www/anyphoto-server/
            ./server/.npmrc => /home/www/anyphoto-server/
          last_ssh: |
            source /etc/profile
            cd /home/www/anyphoto-server
            pnpm i
            pnpm run start:production

  send-email:
    name: send email
    runs-on: ubuntu-latest
    # important
    if: success('check-changed-files')
    needs: [deploy-web, deploy-server, check-changed-files]
    steps:
      - name: Check Deploy Status
        id: checkDeployStatus
        run: |
          if [[ "${{ needs.deploy-web.result }}" != 'failure' && "${{ needs.deploy-server.result }}" != 'failure' && "${{ needs.check-changed-files.result }}" != 'failure' ]]; then
            echo "DeployStatus=success" >> $GITHUB_OUTPUT
          else
            echo "DeployStatus=fail" >> $GITHUB_OUTPUT
          fi

      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address if not connection_url:
          server_address: smtp.gmail.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended) mail server username:
          username: ${{secrets.GMAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.GMAIL_PASSWORD}}
          # Required mail subject:
          subject: Github Actions Deploy Result
          # Required recipients' addresses:
          to: ${{secrets.GMAIL_USERNAME}}
          # Required sender full name (address can be skipped):
          from: Github Actioner
          # Optional plain body:
          body: |
            Deploy Result: ${{steps.checkDeployStatus.outputs.DeployStatus}}


            Web:
            -------
            Deploy Web Job Result: ${{ needs.deploy-web.result }} 

            Web changed files: ${{ needs.check-changed-files.outputs.webChangedFiles }}

            Server:
            -------
            Deploy Server Job Result: ${{ needs.deploy-server.result }}

            Web changed files: ${{ needs.check-changed-files.outputs.serverChangedFiles }}

            Commit:
            -------
            Commit Id: ${{ github.sha }}

            Commit Message: ${{needs.check-changed-files.outputs.latestCommitMessage}}

          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: high
